[00:00:00]
>> Mike North: So one of the interesting things about tools for JavaScript, for editors for JavaScript, is that unlike other languages like Java, it seems that these light editors are way more popular than like the heavier IDE type experience. IDEs would be like, Eclipse, or NetBeans, that's one that I used to use, or IntelliJ.

[00:00:24]
These are things that are designed for typed languages where you can analyze the code and figure out you know you can do a bunch of indexing in the background and figure out what's going on. Traditionally this is not really been easy or possible with JavaScript because. It is dynamically typed and you know we kind figure out if something is gonna work at run time.

[00:00:48]
Static analysis cannot traditionally get us as quite as far. So this is where we saw things like Sublime and Atom and like Notepad++ for Windows users becoming really popular. More cell than the heavier experiences. Now, it's not to say that it is bad to use this other types of development environments but they have not become, the defacto standard for the JavaScript world as they have been for languages like Java or Ruby, right?

[00:01:22]
Those sort of have a go-to editor of sorts. So I think code strikes a great balance. Visual Studio Code strikes a great balance between providing some of the features we like in these heavier experiences while keeping things as simple as possible. It all starts with just opening a text file.

[00:01:41]
And we don't have to create a big project or a big workplace. We can opt into that as we go. So one of the most impressive things about the way that this works, the way Visual Studio code has started to evolve is we're seeing like great features drop every month.

[00:01:59]
Every release seems to have more and more rich functionality for us. And they have a habit, a good habit, of developing features that sort of enrich our experience without introducing any complexity from our part. Right? Like next to a color, why not put a little swatch of what that color looks like that you can click on and you can change.

[00:02:23]
That doesn't require any set up. It doesn't detract from anyone's experience. And it makes it feel like way more than just text. So, over time, we've seen the ability to add task running. So this is auto detection of things that are in your npm scripts, or your gulp file, or your grunt file.

[00:02:43]
You can launch those from within the editor. We see the ability to check settings into a project. So if you have a particular set of paths or particular set of launch configurations, which we'll talk about later in the day, that relate to That specific piece of code, that can be checked in with get.

[00:03:02]
That can be something your whole team shares. The plug in ecosystem has been really successful. I think the code team has taken one of Adam's great decisions and made it so that web developers. Can build plugins more easily. It's all built with web technology, like what you're looking at here, this in fact is a browser.

[00:03:29]
If we toggle developer tools, you may recognize this as like, what we're looking at is a Chrome, more or less. I can actually inspect element. Maybe I can inspect all the way down there, because we have an object here, but this is definitely HTML and CSS. We as web developers know how to work with this.

[00:03:49]
And it's more approachable and so the result is people are writing plug ins like crazy and they are high quality. Sublime had a little bit of a challenging. It'll ramp up to building plug-ins. Because behind the scenes everything was Perl, right. So you had to know Perl and be a wed developer to build those web development plug-ins.

[00:04:16]
So one of the great things that IDEs bring to the table is this ability to analyze our code in the background. And Visual Studio code has started to incorporate that. Recently, as of this year, we get to use typescript which is at the core of Visual Studio code.

[00:04:34]
We use some typescript tools to analyze regular JavaScript and we're gonna look at how we can go about doing that and Catch subtle errors or subtle inconsistencies within our code. So we're starting to get IDE-like benefits in a light and thin sort of text editor experience. And then finally, this has been built, and again, this is probably the newest editor on the market, in terms of widespread adoption.

[00:05:04]
They get to stand on the shoulders of everything that came before them. And it seems that they've built things that the Visual Studio Code team has built things in a way that is really extensible. So you see plug ins for things like elixir and go, languages that really have nothing to do with what this editor was originally intended for.

[00:05:26]
But the experiences ends up being really good, where you can have the right abstractions around debugging tools where you can hook up a go debugger or rust debugger really easily. Despite the fact that like this is really built with web developers in mind.

